# #!/usr/bin/perl
snippet #!
	#!/usr/bin/perl

# Hash Pointer
snippet .
	 =>
# Function
snippet sub

	=head2 $1
	
	${2:func_descr}

	=cut

	sub ${1:function_name} {
		${3:#body ...}
	}
# Catalyst sub
snippet subc
	sub ${1:function_name} :Local {
		my ( $self, $c ) = @_;
		${2:#body}
	}

# Conditional
snippet if
	if (${1}) {
		${2:# body...}
	}
# Conditional if..else
snippet ife
	if (${1}) {
		${2:# body...}
	}
	else {
		${3:# else...}
	}
# Conditional if..elsif..else
snippet ifee
	if (${1}) {
		${2:# body...}
	}
	elsif (${3}) {
		${4:# elsif...}
	}
	else {
		${5:# else...}
	}
# Conditional One-line
snippet xif
	${1:expression} if ${2:condition};${3}
# Unless conditional
snippet unless
	unless (${1}) {
		${2:# body...}
	}
# Unless conditional One-line
snippet xunless
	${1:expression} unless ${2:condition};${3}
# Try/Except
snippet eval
	eval {
		${1:# do something risky...}
	};
	if ($@) {
		${2:# handle failure...}
	}
# While Loop
snippet wh
	while (${1}) {
		${2:# body...}
	}
# While Loop One-line
snippet xwh
	${1:expression} while ${2:condition};${3}
# C-style For Loop
snippet cfor
	for (my $${2:var} = 0; $$2 < ${1:count}; $$2${3:++}) {
		${4:# body...}
	}
# For loop one-line
snippet xfor
	${1:expression} for @${2:array};${3}
# Foreach Loop
snippet for
	foreach my $${1:x} (@${2:array}) {
		${3:# body...}
	}
# Foreach Loop One-line
snippet fore
	${1:expression} foreach @${2:array};${3}
# Package
snippet cl
	package ${1:ClassName};

	use 5.010;
	use Any::Moose;

	has 'debug' => (is => 'rw', isa => 'Bool', default => 0);

	=head1 NAME

	$1 - ${2:ClassDesc}

	=head1 VERSION

	Version 0.1

	=cut

	our $VERSION = '0.1';

	=head1 SYNOPSIS

	${3:ClassLongDesc}

	=head1 FUNCTIONS

	=cut

	${5}

	=head1 AUTHOR

	Lenz Gschwendtner, C<< <norbu09 at cpan.org> >>

	=head1 BUGS

	Please report any bugs through the web interface at
	L<https://github.com/norbu09/${4:githubName}/issues>.  I will be notified, and then you'll
	automatically be notified of progress on your bug as I make changes.

	=head1 SUPPORT

	You can find documentation for this module with the perldoc command.

		perldoc $1

	You can also look for information at:

	=over 4

	=item * AnnoCPAN: Annotated CPAN documentation

	L<http://annocpan.org/dist/$4>

	=item * CPAN Ratings

	L<http://cpanratings.perl.org/d/$4>

	=item * Search CPAN

	L<http://search.cpan.org/dist/$4/>

	=back


	=head1 COPYRIGHT & LICENSE

	Copyright `&enc[:2] == "utf" ? "Â©" : "(c)"` `strftime("%Y")` `g:snips_author`.

	This program is free software; you can redistribute it and/or modify it
	under the terms of either: the GNU General Public License as published
	by the Free Software Foundation; or the Artistic License.

	See http://dev.perl.org/licenses/ for more information.


	=cut
	__PACKAGE__->meta->make_immutable();
# Read File
snippet slurp
	my $${1:var};
	{ local $/ = undef; local *FILE; open FILE, "<${2:file}"; $$1 = <FILE>; close FILE }${3}
# Case statement
snippet given
	given(${1}){
		when(${2}) {${3};}
	}
